{"version":3,"sources":["webpack:///src/app/person/person.page.html","webpack:///src/app/person/person-routing.module.ts","webpack:///src/app/person/person.module.ts","webpack:///src/app/person/person.page.scss","webpack:///src/app/person/person.page.ts"],"names":["routes","path","component","PersonPageRoutingModule","imports","forChild","exports","PersonPageModule","declarations","PersonPage","database","personName","persons","category_id","categories","editMode","selected_category_id","editId","getCategories","getPersons","then","data","rows","length","i","push","item","alert","editPerson","addPerson","id","deletePerson","person","selector","template"],"mappings":"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","file":"person-person-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar class=\\\"new-background-color\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"color:#ffffff\\\">Direccion restaurant</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label>Categoria Restaurate</ion-label>\\n      <ion-select value=\\\"{{ selected_category_id }}\\\" [(ngModel)]=\\\"category_id\\\">\\n        <ion-select-option\\n          *ngFor=\\\"let category of categories\\\"\\n          value=\\\"{{ category.id }}\\\"\\n          >{{ category.name }}</ion-select-option\\n        >\\n      </ion-select>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Direccion restaurante </ion-label>\\n      <ion-input [(ngModel)]=\\\"personName\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-button color=\\\"success\\\" expand=\\\"block\\\" (click)=\\\"addPerson()\\\">Crear </ion-button>\\n    <ion-button color= \\\"danger\\\" expand=\\\"block\\\" [routerLink]=\\\"['/home']\\\">Salir</ion-button>\\n    <ion-button color= \\\"warning\\\" expand=\\\"block\\\" [routerLink]=\\\"['/registroadmin']\\\">AÃ±adir administrador</ion-button>\\n    <ion-button expand=\\\"block\\\" [routerLink]=\\\"['/vermudanzas']\\\">Ver Restaurante Registrado</ion-button>\\n  </ion-list>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let person of persons\\\">\\n      <ion-item-options side=\\\"start\\\">\\n        <ion-item-option color=\\\"warning\\\" (click)=\\\"editPerson(person)\\\">Editar</ion-item-option>\\n      </ion-item-options>\\n\\n      <ion-item>\\n        <ion-label>{{ person.person }}</ion-label>\\n        <ion-badge color=\\\"primary\\\">{{ person.category }}</ion-badge>\\n      </ion-item>\\n\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"deletePerson(person.id)\\\"\\n          >Borrar</ion-item-option\\n        >\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n\\n  \\n\\n  \\n\\n    \\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonPage } from './person.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PersonPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PersonPageRoutingModule } from './person-routing.module';\n\nimport { PersonPage } from './person.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PersonPageRoutingModule\n  ],\n  declarations: [PersonPage]\n})\nexport class PersonPageModule {}\n","export default \"ion-menu-button {\\n  color: var(--ion-color-primary);\\n}\\n\\n.new-background-color {\\n  --background: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGVyc29uL3BlcnNvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrQkFBQTtBQUNGOztBQUNBO0VBQ0UsbUJBQUE7QUFFRiIsImZpbGUiOiJzcmMvYXBwL3BlcnNvbi9wZXJzb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLW1lbnUtYnV0dG9uIHtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbn1cbi5uZXctYmFja2dyb3VuZC1jb2xvcntcbiAgLS1iYWNrZ3JvdW5kOiBibGFjaztcbn0iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService } from \"../database.service\";\n\n@Component({\n  selector: \"app-person\",\n  templateUrl: \"./person.page.html\",\n  styleUrls: [\"./person.page.scss\"],\n})\nexport class PersonPage implements OnInit {\n  personName: string = \"\";\n  persons: any = [];\n  category_id: number = 0;\n  categories: any = [];\n\n  editMode: boolean = false;\n  selected_category_id: number = 0;\n  editId: number = 0;\n\n  constructor(public database: DatabaseService) {\n    this.getCategories();\n    this.getPersons();\n  }\n\n  ngOnInit() {}\n\n  getCategories() {\n    this.database.getCategories().then((data) => {\n      this.categories = [];\n      if (data.rows.length > 0) {\n        for (var i = 0; i < data.rows.length; i++) {\n          this.categories.push(data.rows.item(i));\n        }\n      }\n    });\n  }\n\n  addPerson() {\n    if (!this.personName.length) {\n      alert(\"Enter person name\");\n      return;\n    }\n\n    if (this.category_id === 0) {\n      alert(\"Select category\");\n      return;\n    }\n\n    if (this.editMode) {\n      this.database\n        .editPerson(this.personName, this.category_id, this.editId)\n        .then((data) => {\n          this.personName = \"\";\n          this.editMode = false;\n          this.editId = 0;\n          this.selected_category_id = 0;\n          alert(data);\n          this.getPersons();\n        });\n    } else {\n      // add\n      this.database\n        .addPerson(this.personName, this.category_id)\n        .then((data) => {\n          this.personName = \"\";\n          this.category_id = 0;\n          alert(data);\n          this.getPersons();\n        });\n    }\n  }\n\n  getPersons() {\n    this.database.getPersons().then((data) => {\n      this.persons = [];\n      if (data.rows.length > 0) {\n        for (var i = 0; i < data.rows.length; i++) {\n          this.persons.push(data.rows.item(i));\n        }\n      }\n    });\n  }\n\n  deletePerson(id: number) {\n    this.database.deletePerson(id).then((data) => {\n      alert(data);\n      this.getPersons();\n    });\n  }\n\n  editPerson(person: any) {\n    this.editMode = true;\n    this.selected_category_id = person.category_id;\n    this.personName = person.person;\n    this.editId = person.id;\n  }\n}\n"]}